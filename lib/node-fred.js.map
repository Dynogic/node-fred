{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6201dae96fedcfded296","webpack:///./src/Api/Builders/builder.js","webpack:///./src/api.js","webpack:///./src/Api/categories.js","webpack:///./src/Api/releases.js","webpack:///./src/Api/series.js","webpack:///./src/Api/sources.js","webpack:///./src/Api/tags.js","webpack:///./src/Api/Builders/categoryBuilder.js","webpack:///./src/Api/Builders/releaseBuilder.js","webpack:///./src/Api/Builders/seriesBuilder.js","webpack:///./src/Api/Builders/sourcesBuilder.js","webpack:///./src/Api/Builders/tagsBuilder.js","webpack:///external \"axios\"","webpack:///./src/index.js"],"names":["Builder","url","attribute","apiKey","addAttribute","fileType","dateString","regEx","match","params","realTimeStart","isValidDate","Error","realTimeEnd","limit","parseInt","offset","orderBy","sortOrder","toLowerCase","filterVariable","filterValue","tagNames","excludeTagNames","searchText","tagGroupId","api","create","baseURL","timeout","headers","Categories","returnType","categoryBuilder","categoryId","Promise","resolve","reject","setAPIKey","setCategoryId","setFileType","getUrl","get","then","res","data","catch","err","response","e","setRealTimeStart","setRealTimeEnd","setLimit","setOffset","setOrderBy","setSortOrder","setFilterVariable","setFilterValue","setTagNames","setExcludeTagNames","setTagGroupId","setSearchText","Releases","releaseBuilder","setIncludeRelatedDatesWithNoData","releaseId","setReleaseId","setElementId","setIncludeObservationValues","setObservationDate","Series","seriesBuilder","seriesId","setSeriesId","setObservationStart","setObservationEnd","setUnits","setFrequency","setAggregationMethod","setOutputType","setVintageDate","setSearchType","seriesSearchText","setTagSearchText","setSeriesSearchText","Sources","sourcesBuilder","sourceId","setSourceId","Tags","tagsBuilder","CategoryBuilder","ReleaseBuilder","id","includeRelatedDatesWithNoData","elementId","includeObservationValues","observationDate","SeriesBuilder","observationStart","observationEnd","units","frequency","aggregationMethod","outputType","vintageDates","searchType","tagSearchText","SourcesBuilder","TagsBuilder","Fred","categories","releases","sources","series","tags"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;;AAEA;;;;;;;;;;IACMA,O;AACF,uBAAc;AAAA;;AACV,aAAKC,GAAL,GAAW,EAAX;AACH;;;;qCAEYC,S,EAAW;AACpB,iBAAKD,GAAL,IAAY,CAAC,KAAKA,GAAL,KAAa,EAAb,GAAkB,EAAlB,GAAuB,GAAxB,IAA+BC,SAA3C;AACA,mBAAO,IAAP;AACH;;;kCAESC,M,EAAQ;AACd,mBAAO,KAAKC,YAAL,CAAkB,aAAaD,MAA/B,CAAP;AACH;;;oCAEWE,Q,EAAU;AAClB,mBAAO,KAAKD,YAAL,CAAkB,eAAeC,QAAjC,CAAP;AACH;;;oCAEWC,U,EAAY;AACpB,gBAAMC,QAAQ,qBAAd;;AAEA,mBAAOD,WAAWE,KAAX,CAAiBD,KAAjB,KAA2B,IAAlC;AACH;;;yCAEgBE,M,EAAQ;AACrB,gBAAMC,gBAAgBD,OAAO,gBAAP,CAAtB;;AAEA,gBAAG,CAACC,aAAJ,EAAmB;AACf,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAAC,KAAKC,WAAL,CAAiBD,aAAjB,CAAJ,EAAqC;AACxC,sBAAM,IAAIE,KAAJ,CAAU,oFAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,oBAAoBM,aAAtC,CAAP;AACH;;;uCAEcD,M,EAAQ;AACnB,gBAAMI,cAAcJ,OAAO,cAAP,CAApB;;AAEA,gBAAG,CAACI,WAAJ,EAAiB;AACb,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAAC,KAAKF,WAAL,CAAiBE,WAAjB,CAAJ,EAAmC;AACtC,sBAAM,IAAID,KAAJ,CAAU,oFAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,kBAAkBS,WAApC,CAAP;AACH;;;iCAEQJ,M,EAAQ;AACb,gBAAMK,QAAQC,SAASN,OAAO,OAAP,CAAT,EAA0B,EAA1B,CAAd;;AAEA,gBAAG,CAACK,KAAJ,EAAW;AACP,uBAAO,IAAP;AACH,aAFD,MAEO,IAAGA,QAAQ,CAAR,IAAaA,QAAQ,IAAxB,EAA8B;AACjC,sBAAM,IAAIF,KAAJ,CAAU,kCAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,WAAWU,KAA7B,CAAP;AACH;;;kCAESL,M,EAAQ;AACd,gBAAMO,SAASD,SAASN,OAAO,QAAP,CAAT,EAA2B,EAA3B,CAAf;;AAEA,gBAAG,CAACO,MAAJ,EAAY;AACR,uBAAO,IAAP;AACH,aAFD,MAEO,IAAGA,SAAS,CAAZ,EAAe;AAClB,sBAAM,IAAIJ,KAAJ,CAAU,+BAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,YAAYY,MAA9B,CAAP;AACH;;;mCAEUP,M,EAAQ;AACf,gBAAMQ,UAAUR,OAAO,UAAP,CAAhB;;AAEA,gBAAG,CAACQ,OAAJ,EAAa;AACT,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKb,YAAL,CAAkB,cAAca,OAAhC,CAAP;AACH;;;qCAEYR,M,EAAQ;AACjB,gBAAIS,YAAYT,OAAO,YAAP,CAAhB;;AAEA,gBAAG,CAACS,SAAJ,EAAe;AACX,uBAAO,IAAP;AACH;AACDA,wBAAYA,UAAUC,WAAV,EAAZ;AACA,gBAAGD,cAAc,KAAd,IAAuBA,cAAc,MAAxC,EAAgD;AAC5C,sBAAM,IAAIN,KAAJ,CAAU,2CAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,gBAAgBc,SAAlC,CAAP;AACH;;;0CAEiBT,M,EAAQ;AACtB,gBAAMW,iBAAiBX,OAAO,iBAAP,CAAvB;;AAEA,gBAAG,CAACW,cAAJ,EAAoB;AAChB,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKhB,YAAL,CAAkB,qBAAqBgB,cAAvC,CAAP;AACH;;;uCAEcX,M,EAAQ;AACnB,gBAAMY,cAAcZ,OAAO,cAAP,CAApB;;AAEA,gBAAG,CAACY,WAAJ,EAAiB;AACb,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKjB,YAAL,CAAkB,kBAAkBiB,WAApC,CAAP;AACH;;;oCAEWZ,M,EAAQ;AAChB,gBAAI,OAAQA,MAAR,KAAoB,QAAxB,EAAkC;AAC9B,uBAAO,KAAKL,YAAL,CAAkB,eAAeK,MAAjC,CAAP;AACH;AACD,gBAAMa,WAAWb,OAAO,WAAP,CAAjB;;AAEA,gBAAG,CAACa,QAAJ,EAAc;AACV,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKlB,YAAL,CAAkB,eAAekB,QAAjC,CAAP;AACH;;;2CAEkBb,M,EAAQ;AACvB,gBAAMc,kBAAkBd,OAAO,mBAAP,CAAxB;;AAEA,gBAAG,CAACc,eAAJ,EAAqB;AACjB,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKnB,YAAL,CAAkB,uBAAuBmB,eAAzC,CAAP;AACH;;;sCAEad,M,EAAQ;AAClB,gBAAMe,aAAaf,OAAO,aAAP,CAAnB;;AAEA,gBAAG,CAACe,UAAJ,EAAgB;AACZ,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKpB,YAAL,CAAkB,iBAAiBoB,UAAnC,CAAP;AACH;;;sCAEaf,M,EAAQ;AAClB,gBAAMgB,aAAahB,OAAO,cAAP,CAAnB;;AAEA,gBAAG,CAACgB,UAAJ,EAAgB;AACZ,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKrB,YAAL,CAAkB,kBAAkBqB,UAApC,CAAP;AACH;;;iCAEQ;AACL,mBAAO,KAAKxB,GAAZ;AACH;;;;;;kBAGUD,O;;;;;;;;AC3Jf;;;;;;AACA;;;;;;AAEA,IAAM0B,MAAM,gBAAMC,MAAN,CAAa;AACrBC,aAAS,kCADY;AAErBC,aAAS,IAFY;AAGrBC,aAAS;AAHY,CAAb,CAAZ;;kBAMeJ,G;;;;;;;;ACTf;;;;;;;;AACA;;;;AACA;;;;;;;;IAEMK,U;AACF,wBAAY5B,MAAZ,EAAoB6B,UAApB,EAAgC;AAAA;;AAC5B,aAAK7B,MAAL,GAAcA,MAAd;AACA,aAAK6B,UAAL,GAAkBA,UAAlB;AACA,aAAKC,eAAL,GAAuB,+BAAvB;AACH;;AAED;;;;;;;;;oCAKYC,U,EAAY;AAAA;;AACpB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,MAAKgC,eAAL,CACPK,SADO,CACG,MAAKnC,MADR,EAEPoC,aAFO,CAEOL,UAFP,EAGPM,WAHO,CAGK,MAAKR,UAHV,EAIPS,MAJO,EAAZ;;AAMA,kCAAIC,GAAJ,CAAQ,cAAczC,GAAtB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAdD,CAcE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAlBM,CAAP;AAmBH;;AAED;;;;;;;;;2CAMmBf,U,EAAyB;AAAA;;AAAA,gBAAbzB,MAAa,uEAAJ,EAAI;;AACxC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKgC,eAAL,CACPK,SADO,CACG,OAAKnC,MADR,EAEPoC,aAFO,CAEOL,UAFP,EAGPM,WAHO,CAGK,OAAKR,UAHV,EAIPkB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,uBAAuBzC,GAA/B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;6CAMqBf,U,EAAyB;AAAA;;AAAA,gBAAbzB,MAAa,uEAAJ,EAAI;;AAC1C,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKgC,eAAL,CACPK,SADO,CACG,OAAKnC,MADR,EAEPoC,aAFO,CAEOL,UAFP,EAGPM,WAHO,CAGK,OAAKR,UAHV,EAIPkB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,sBAAsBzC,GAA9B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;0CAMkBf,U,EAAyB;AAAA;;AAAA,gBAAbzB,MAAa,uEAAJ,EAAI;;AACvC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKgC,eAAL,CACPK,SADO,CACG,OAAKnC,MADR,EAEPoC,aAFO,CAEOL,UAFP,EAGPM,WAHO,CAGK,OAAKR,UAHV,EAIPkB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP6C,UARO,CAQI7C,MARJ,EASP8C,YATO,CASM9C,MATN,EAUP+C,iBAVO,CAUW/C,MAVX,EAWPgD,cAXO,CAWQhD,MAXR,EAYPiD,WAZO,CAYKjD,MAZL,EAaPkD,kBAbO,CAaYlD,MAbZ,EAcPgC,MAdO,EAAZ;;AAgBA,kCAAIC,GAAJ,CAAQ,qBAAqBzC,GAA7B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAxBD,CAwBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA5BM,CAAP;AA6BH;;AAED;;;;;;;;;wCAMgBf,U,EAAyB;AAAA;;AAAA,gBAAbzB,MAAa,uEAAJ,EAAI;;AACrC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKgC,eAAL,CACPK,SADO,CACG,OAAKnC,MADR,EAEPoC,aAFO,CAEOL,UAFP,EAGPM,WAHO,CAGK,OAAKR,UAHV,EAIPkB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP6C,UARO,CAQI7C,MARJ,EASP8C,YATO,CASM9C,MATN,EAUPiD,WAVO,CAUKjD,MAVL,EAWPmD,aAXO,CAWOnD,MAXP,EAYPoD,aAZO,CAYOpD,MAZP,EAaPgC,MAbO,EAAZ;;AAeA,kCAAIC,GAAJ,CAAQ,mBAAmBzC,GAA3B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAvBD,CAuBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA3BM,CAAP;AA4BH;;AAED;;;;;;;;;+CAMuBf,U,EAAyB;AAAA;;AAAA,gBAAbzB,MAAa,uEAAJ,EAAI;;AAC5C,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKgC,eAAL,CACPK,SADO,CACG,OAAKnC,MADR,EAEPoC,aAFO,CAEOL,UAFP,EAGPM,WAHO,CAGK,OAAKR,UAHV,EAIPkB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP6C,UARO,CAQI7C,MARJ,EASP8C,YATO,CASM9C,MATN,EAUPiD,WAVO,CAUKjD,MAVL,EAWPmD,aAXO,CAWOnD,MAXP,EAYPoD,aAZO,CAYOpD,MAZP,EAaPgC,MAbO,EAAZ;;AAeA,kCAAIC,GAAJ,CAAQ,2BAA2BzC,GAAnC,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAvBD,CAuBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA3BM,CAAP;AA4BH;;;;;;kBAGUlB,U;;;;;;;;ACnNf;;;;;;;;AACA;;;;AACA;;;;;;;;IAEM+B,Q;AAEF,sBAAY3D,MAAZ,EAAoB6B,UAApB,EAAgC;AAAA;;AAC5B,aAAK7B,MAAL,GAAcA,MAAd;AACA,aAAK6B,UAAL,GAAkBA,UAAlB;AACA,aAAK+B,cAAL,GAAsB,8BAAtB;AACH;;AAED;;;;;;;;;uCAKetD,M,EAAQ;AAAA;;AACnB,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,MAAK8D,cAAL,CACPzB,SADO,CACG,MAAKnC,MADR,EAEPqC,WAFO,CAEK,MAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPgC,MATO,EAAZ;;AAWA,kCAAIC,GAAJ,CAAQ,cAAczC,GAAtB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAnBD,CAmBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAvBM,CAAP;AAwBH;;AAED;;;;;;;;gDAKwBxC,M,EAAQ;AAAA;;AAC5B,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPuD,gCATO,CAS0BvD,MAT1B,EAUPgC,MAVO,EAAZ;;AAYA,kCAAIC,GAAJ,CAAQ,oBAAoBzC,GAA5B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBApBD,CAoBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAxBM,CAAP;AAyBH;;AAED;;;;;;;;;mCAMWgB,S,EAAwB;AAAA;;AAAA,gBAAbxD,MAAa,uEAAJ,EAAI;;AAC/B,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPf,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,aAAazC,GAArB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;4CAMoBgB,S,EAAwB;AAAA;;AAAA,gBAAbxD,MAAa,uEAAJ,EAAI;;AACxC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPf,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP8C,YARO,CAQM9C,MARN,EASPuD,gCATO,CAS0BvD,MAT1B,EAUPgC,MAVO,EAAZ;;AAYA,kCAAIC,GAAJ,CAAQ,mBAAmBzC,GAA3B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBApBD,CAoBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAxBM,CAAP;AAyBH;;AAED;;;;;;;;;4CAMoBgB,S,EAAwB;AAAA;;AAAA,gBAAbxD,MAAa,uEAAJ,EAAI;;AACxC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPf,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP8C,YARO,CAQM9C,MARN,EASP6C,UATO,CASI7C,MATJ,EAUP+C,iBAVO,CAUW/C,MAVX,EAWPgD,cAXO,CAWQhD,MAXR,EAYPiD,WAZO,CAYKjD,MAZL,EAaPkD,kBAbO,CAaYlD,MAbZ,EAcPgC,MAdO,EAAZ;;AAgBA,kCAAIC,GAAJ,CAAQ,oBAAoBzC,GAA5B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAxBD,CAwBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA5BM,CAAP;AA6BH;;AAED;;;;;;;;;6CAMqBgB,S,EAAwB;AAAA;;AAAA,gBAAbxD,MAAa,uEAAJ,EAAI;;AACzC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPf,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,qBAAqBzC,GAA7B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;0CAMkBgB,S,EAAwB;AAAA;;AAAA,gBAAbxD,MAAa,uEAAJ,EAAI;;AACtC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPf,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP8C,YARO,CAQM9C,MARN,EASP6C,UATO,CASI7C,MATJ,EAUPiD,WAVO,CAUKjD,MAVL,EAWPmD,aAXO,CAWOnD,MAXP,EAYPoD,aAZO,CAYOpD,MAZP,EAaPgC,MAbO,EAAZ;;AAeA,kCAAIC,GAAJ,CAAQ,kBAAkBzC,GAA1B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAvBD,CAuBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA3BM,CAAP;AA4BH;;AAED;;;;;;;;;;iDAOyBgB,S,EAAW3C,Q,EAAuB;AAAA;;AAAA,gBAAbb,MAAa,uEAAJ,EAAI;;AACvD,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPf,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP8C,YARO,CAQM9C,MARN,EASP6C,UATO,CASI7C,MATJ,EAUPiD,WAVO,CAUK,EAAC,aAAapC,QAAd,EAVL,EAWPqC,kBAXO,CAWYlD,MAXZ,EAYPmD,aAZO,CAYOnD,MAZP,EAaPoD,aAbO,CAaOpD,MAbP,EAcPgC,MAdO,EAAZ;;AAgBA,kCAAIC,GAAJ,CAAQ,0BAA0BzC,GAAlC,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAxBD,CAwBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA5BM,CAAP;AA6BH;;AAED;;;;;;;;;gDAMwBgB,S,EAAwB;AAAA;;AAAA,gBAAbxD,MAAa,uEAAJ,EAAI;;AAC5C,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAK8D,cAAL,CACPzB,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkC,YAHO,CAGMD,SAHN,EAIPE,YAJO,CAIM1D,MAJN,EAKP2D,2BALO,CAKqB3D,MALrB,EAMP4D,kBANO,CAMY5D,MANZ,EAOPgC,MAPO,EAAZ;;AASA,kCAAIC,GAAJ,CAAQ,oBAAoBzC,GAA5B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAjBD,CAiBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aArBM,CAAP;AAsBH;;;;;;kBAIUa,Q;;;;;;;;AC9Tf;;;;;;;;AACA;;;;AACA;;;;;;;;IAEMQ,M;AACF,oBAAYnE,MAAZ,EAAoB6B,UAApB,EAAgC;AAAA;;AAC5B,aAAK7B,MAAL,GAAcA,MAAd;AACA,aAAK6B,UAAL,GAAkBA,UAAlB;AACA,aAAKuC,aAAL,GAAqB,6BAArB;AACH;;AAED;;;;;;;;;;kCAMUC,Q,EAAuB;AAAA;;AAAA,gBAAb/D,MAAa,uEAAJ,EAAI;;AAC7B,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,MAAKsE,aAAL,CACPjC,SADO,CACG,MAAKnC,MADR,EAEPqC,WAFO,CAEK,MAAKR,UAFV,EAGPyC,WAHO,CAGKD,QAHL,EAIPtB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,YAAYzC,GAApB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;+CAMuBuB,Q,EAAuB;AAAA;;AAAA,gBAAb/D,MAAa,uEAAJ,EAAI;;AAC1C,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPyC,WAHO,CAGKD,QAHL,EAIPtB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,uBAAuBzC,GAA/B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;iDAMyBuB,Q,EAAuB;AAAA;;AAAA,gBAAb/D,MAAa,uEAAJ,EAAI;;AAC5C,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPyC,WAHO,CAGKD,QAHL,EAIPtB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP8C,YARO,CAQM9C,MARN,EASPiE,mBATO,CASajE,MATb,EAUPkE,iBAVO,CAUWlE,MAVX,EAWPmE,QAXO,CAWEnE,MAXF,EAYPoE,YAZO,CAYMpE,MAZN,EAaPqE,oBAbO,CAacrE,MAbd,EAcPsE,aAdO,CAcOtE,MAdP,EAePuE,cAfO,CAeQvE,MAfR,EAgBPgC,MAhBO,EAAZ;;AAkBA,kCAAIC,GAAJ,CAAQ,yBAAyBzC,GAAjC,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBA1BD,CA0BE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA9BM,CAAP;AA+BH;;AAED;;;;;;;;;4CAMoBuB,Q,EAAuB;AAAA;;AAAA,gBAAb/D,MAAa,uEAAJ,EAAI;;AACvC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPyC,WAHO,CAGKD,QAHL,EAIPtB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,oBAAoBzC,GAA5B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;mDAM2BzB,U,EAAyB;AAAA;;AAAA,gBAAbf,MAAa,uEAAJ,EAAI;;AAChD,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGP6B,aAHO,CAGOrC,UAHP,EAIP0B,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP6C,UARO,CAQI7C,MARJ,EASP8C,YATO,CASM9C,MATN,EAUP+C,iBAVO,CAUW/C,MAVX,EAWPgD,cAXO,CAWQhD,MAXR,EAYPiD,WAZO,CAYKjD,MAZL,EAaPkD,kBAbO,CAaYlD,MAbZ,EAcPwE,aAdO,CAcOxE,MAdP,EAePgC,MAfO,EAAZ;;AAiBA,kCAAIC,GAAJ,CAAQ,mBAAmBzC,GAA3B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAzBD,CAyBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA7BM,CAAP;AA8BH;;AAED;;;;;;;;;;+CAOuBiC,gB,EAA+B;AAAA;;AAAA,gBAAbzE,MAAa,uEAAJ,EAAI;;AAClD,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPiD,WATO,CASKjD,MATL,EAUPmD,aAVO,CAUOnD,MAVP,EAWP0E,gBAXO,CAWU1E,MAXV,EAYP2E,mBAZO,CAYaF,gBAZb,EAaPzC,MAbO,EAAZ;;AAeA,kCAAIC,GAAJ,CAAQ,wBAAwBzC,GAAhC,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAvBD,CAuBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA3BM,CAAP;AA4BH;;AAED;;;;;;;;;;sDAO8BiC,gB,EAA+B;AAAA;;AAAA,gBAAbzE,MAAa,uEAAJ,EAAI;;AACzD,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPiD,WATO,CASKjD,MATL,EAUPkD,kBAVO,CAUYlD,MAVZ,EAWPmD,aAXO,CAWOnD,MAXP,EAYP0E,gBAZO,CAYU1E,MAZV,EAaP2E,mBAbO,CAaaF,gBAbb,EAcPzC,MAdO,EAAZ;;AAgBA,kCAAIC,GAAJ,CAAQ,gCAAgCzC,GAAxC,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAxBD,CAwBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA5BM,CAAP;AA6BH;;AAED;;;;;;;;;yCAMiBuB,Q,EAAuB;AAAA;;AAAA,gBAAb/D,MAAa,uEAAJ,EAAI;;AACpC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPyC,WAHO,CAGKD,QAHL,EAIPtB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP6C,UANO,CAMI7C,MANJ,EAOP8C,YAPO,CAOM9C,MAPN,EAQPgC,MARO,EAAZ;;AAUA,kCAAIC,GAAJ,CAAQ,iBAAiBzC,GAAzB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAlBD,CAkBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAtBM,CAAP;AAuBH;;AAED;;;;;;;;;2CAM8B;AAAA;;AAAA,gBAAbxC,MAAa,uEAAJ,EAAI;;AAC1B,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKsE,aAAL,CACPjC,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOPgD,cAPO,CAOQhD,MAPR,EAQPgC,MARO,EAAZ;;AAUA,kCAAIC,GAAJ,CAAQ,oBAAoBzC,GAA5B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAlBD,CAkBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAtBM,CAAP;AAuBH;;AAED;;;;;;;;;;8CAOsBuB,Q,EAAuB;AAAA;;AAAA,gBAAb/D,MAAa,uEAAJ,EAAI;;AACzC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,QAAKsE,aAAL,CACPjC,SADO,CACG,QAAKnC,MADR,EAEPqC,WAFO,CAEK,QAAKR,UAFV,EAGPyC,WAHO,CAGKD,QAHL,EAIPtB,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP8C,YARO,CAQM9C,MARN,EASPgC,MATO,EAAZ;;AAWA,kCAAIC,GAAJ,CAAQ,yBAAyBzC,GAAjC,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAnBD,CAmBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAvBM,CAAP;AAwBH;;;;;;kBAIUqB,M;;;;;;;;ACrWf;;;;;;;;AACA;;;;AACA;;;;;;;;IAEMe,O;AACF,qBAAYlF,MAAZ,EAAoB6B,UAApB,EAAgC;AAAA;;AAC5B,aAAK7B,MAAL,GAAcA,MAAd;AACA,aAAK6B,UAAL,GAAkBA,UAAlB;AACA,aAAKsD,cAAL,GAAsB,8BAAtB;AACH;;AAED;;;;;;;;;sCAKc7E,M,EAAQ;AAAA;;AAClB,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,MAAKqF,cAAL,CACPhD,SADO,CACG,MAAKnC,MADR,EAEPqC,WAFO,CAEK,MAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPgC,MATO,EAAZ;;AAWA,kCAAIC,GAAJ,CAAQ,aAAazC,GAArB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAnBD,CAmBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAvBM,CAAP;AAwBH;;AAED;;;;;;;;;kCAMUsC,Q,EAAuB;AAAA;;AAAA,gBAAb9E,MAAa,uEAAJ,EAAI;;AAC7B,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKqF,cAAL,CACPhD,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPwD,WAHO,CAGKD,QAHL,EAIPrC,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMPgC,MANO,EAAZ;;AAQA,kCAAIC,GAAJ,CAAQ,YAAYzC,GAApB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAhBD,CAgBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aApBM,CAAP;AAqBH;;AAED;;;;;;;;;6CAMqBsC,Q,EAAuB;AAAA;;AAAA,gBAAb9E,MAAa,uEAAJ,EAAI;;AACxC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKqF,cAAL,CACPhD,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPwD,WAHO,CAGKD,QAHL,EAIPrC,gBAJO,CAIUzC,MAJV,EAKP0C,cALO,CAKQ1C,MALR,EAMP2C,QANO,CAME3C,MANF,EAOP4C,SAPO,CAOG5C,MAPH,EAQP6C,UARO,CAQI7C,MARJ,EASP8C,YATO,CASM9C,MATN,EAUPgC,MAVO,EAAZ;;AAYA,kCAAIC,GAAJ,CAAQ,qBAAqBzC,GAA7B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBApBD,CAoBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAxBM,CAAP;AAyBH;;;;;;kBAGUoC,O;;;;;;;;AC5Gf;;;;;;;;AACA;;;;AACA;;;;;;;;IAEMI,I;AACF,kBAAYtF,MAAZ,EAAoB6B,UAApB,EAAgC;AAAA;;AAC5B,aAAK7B,MAAL,GAAcA,MAAd;AACA,aAAK6B,UAAL,GAAkBA,UAAlB;AACA,aAAK0D,WAAL,GAAmB,2BAAnB;AACH;;AAED;;;;;;;;;qCAKwB;AAAA;;AAAA,gBAAbjF,MAAa,uEAAJ,EAAI;;AACpB,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,MAAKyF,WAAL,CACPpD,SADO,CACG,MAAKnC,MADR,EAEPqC,WAFO,CAEK,MAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPiD,WATO,CASKjD,MATL,EAUPmD,aAVO,CAUOnD,MAVP,EAWPoD,aAXO,CAWOpD,MAXP,EAYPgC,MAZO,EAAZ;;AAcA,kCAAIC,GAAJ,CAAQ,UAAUzC,GAAlB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAtBD,CAsBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA1BM,CAAP;AA2BH;;AAED;;;;;;;;0CAKkB3B,Q,EAAuB;AAAA;;AAAA,gBAAbb,MAAa,uEAAJ,EAAI;;AACrC,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKyF,WAAL,CACPpD,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPiD,WATO,CASKpC,QATL,EAUPqC,kBAVO,CAUYlD,MAVZ,EAWPmD,aAXO,CAWOnD,MAXP,EAYPoD,aAZO,CAYOpD,MAZP,EAaPgC,MAbO,EAAZ;;AAeA,kCAAIC,GAAJ,CAAQ,kBAAkBzC,GAA1B,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBAvBD,CAuBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aA3BM,CAAP;AA4BH;;AAED;;;;;;;;;iDAMyB3B,Q,EAAuB;AAAA;;AAAA,gBAAbb,MAAa,uEAAJ,EAAI;;AAC5C,mBAAO,IAAI0B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAMpC,MAAM,OAAKyF,WAAL,CACPpD,SADO,CACG,OAAKnC,MADR,EAEPqC,WAFO,CAEK,OAAKR,UAFV,EAGPkB,gBAHO,CAGUzC,MAHV,EAIP0C,cAJO,CAIQ1C,MAJR,EAKP2C,QALO,CAKE3C,MALF,EAMP4C,SANO,CAMG5C,MANH,EAOP6C,UAPO,CAOI7C,MAPJ,EAQP8C,YARO,CAQM9C,MARN,EASPiD,WATO,CASK,EAAC,aAAapC,QAAd,EATL,EAUPqC,kBAVO,CAUYlD,MAVZ,EAWPgC,MAXO,EAAZ;;AAaA,kCAAIC,GAAJ,CAAQ,iBAAiBzC,GAAzB,EACK0C,IADL,CACU,UAACC,GAAD,EAAS;AACXR,gCAAQQ,IAAIC,IAAZ;AACH,qBAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZV,+BAAOU,IAAIC,QAAJ,CAAaH,IAApB;AACH,qBANL;AAOH,iBArBD,CAqBE,OAAMI,CAAN,EAAS;AACPZ,2BAAOY,CAAP;AACH;AACJ,aAzBM,CAAP;AA0BH;;;;;;kBAGUwC,I;;;;;;;;ACtHf;;;;;;;;AAEA;;;;;;;;;;;;IAEME,e;;;;;;;;;;;sCAEYzD,U,EAAY;AACtB,mBAAO,KAAK9B,YAAL,CAAkB,iBAAiB8B,UAAnC,CAAP;AACH;;;;;;kBAIUyD,e;;;;;;;;ACZf;;;;;;;;AAEA;;;;;;;;;;;;IAEMC,c;;;;;;;;;;;qCAEW3B,S,EAAW;AACpB;AACA,gBAAM4B,KAAK9E,SAASkD,SAAT,EAAoB,EAApB,CAAX;;AAEA,gBAAG4B,MAAM,CAAT,EAAY;AACR,sBAAM,IAAIjF,KAAJ,CAAU,2CAAV,CAAN;AACH;;AAED,mBAAO,KAAKR,YAAL,CAAkB,gBAAgB6D,SAAlC,CAAP;AACH;;;yDAEgCxD,M,EAAQ;AACrC,gBAAMqF,gCAAgCrF,OAAO,oCAAP,CAAtC;;AAEA,gBAAG,CAACqF,6BAAJ,EAAmC;AAC/B,uBAAO,IAAP;AACH;AACD,mBAAO,KAAK1F,YAAL,CAAkB,wCAAwC0F,6BAA1D,CAAP;AACH;;;qCAEYrF,M,EAAQ;AACjB,gBAAMsF,YAAYtF,OAAO,YAAP,CAAlB;;AAEA,gBAAG,CAACsF,SAAJ,EAAe;AACX,uBAAO,IAAP;AACH;AACD,mBAAO,KAAK3F,YAAL,CAAkB,gBAAgB2F,SAAlC,CAAP;AACH;;;oDAE2BtF,M,EAAQ;AAChC,gBAAMuF,2BAA2BvF,OAAO,4BAAP,CAAjC;;AAEA,gBAAG,CAACuF,wBAAJ,EAA8B;AAC1B,uBAAO,IAAP;AACH,aAFD,MAEO,IAAGA,6BAA6B,MAA7B,IAAuCA,6BAA6B,OAAvE,EAAgF;AACnF,sBAAM,IAAIpF,KAAJ,CAAU,mEAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,gCAAgC4F,wBAAlD,CAAP;AACH;;;2CAEkBvF,M,EAAQ;AACvB,gBAAMwF,kBAAkBxF,OAAO,kBAAP,CAAxB;;AAEA,gBAAG,CAACwF,eAAJ,EAAqB;AACjB,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAAC,KAAKtF,WAAL,CAAiBsF,eAAjB,CAAJ,EAAuC;AAC1C,sBAAM,IAAIrF,KAAJ,CAAU,oFAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,sBAAsB6F,eAAxC,CAAP;AACH;;;;;;kBAGUL,c;;;;;;;;AC1Df;;;;;;;;AAEA;;;;;;;;;;;;IAEMM,a;;;;;;;;;;;oCAEU1B,Q,EAAU;AAClB,mBAAO,KAAKpE,YAAL,CAAkB,eAAeoE,QAAjC,CAAP;AACH;;;4CAEmB/D,M,EAAQ;AACxB,gBAAM0F,mBAAmB1F,OAAO,mBAAP,CAAzB;;AAEA,gBAAG,CAAC0F,gBAAJ,EAAsB;AAClB,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAAC,KAAKxF,WAAL,CAAiBwF,gBAAjB,CAAJ,EAAwC;AAC3C,sBAAM,IAAIvF,KAAJ,CAAU,oFAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,uBAAuB+F,gBAAzC,CAAP;AACH;;;0CAEiB1F,M,EAAQ;AACtB,gBAAM2F,iBAAiB3F,OAAO,iBAAP,CAAvB;;AAEA,gBAAG,CAAC2F,cAAJ,EAAoB;AAChB,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAAC,KAAKzF,WAAL,CAAiByF,cAAjB,CAAJ,EAAsC;AACzC,sBAAM,IAAIxF,KAAJ,CAAU,oFAAV,CAAN;AACH;AACD,mBAAO,KAAKR,YAAL,CAAkB,qBAAqBgG,cAAvC,CAAP;AACH;;;iCAEQ3F,M,EAAQ;AACb,gBAAM4F,QAAQ5F,OAAO,OAAP,CAAd;;AAEA,gBAAG4F,UAAU,EAAb,EAAiB;AACb,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKjG,YAAL,CAAkB,WAAWiG,KAA7B,CAAP;AACH;;;qCAEY5F,M,EAAQ;AACjB,gBAAM6F,YAAY7F,OAAO,WAAP,CAAlB;;AAEA,gBAAG,CAAC6F,SAAJ,EAAe;AACX,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKlG,YAAL,CAAkB,eAAekG,SAAjC,CAAP;AACH;;;6CAEoB7F,M,EAAQ;AACzB,gBAAM8F,oBAAoB9F,OAAO,oBAAP,CAA1B;;AAEA,gBAAG,CAAC8F,iBAAJ,EAAuB;AACnB,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKnG,YAAL,CAAkB,wBAAwBmG,iBAA1C,CAAP;AACH;;;sCAEa9F,M,EAAQ;AAClB,gBAAM+F,aAAa/F,OAAO,aAAP,CAAnB;;AAEA,gBAAG,CAAC+F,UAAJ,EAAgB;AACZ,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKpG,YAAL,CAAkB,iBAAiBoG,UAAnC,CAAP;AACH;;;uCAEc/F,M,EAAQ;AACnB,gBAAMgG,eAAehG,OAAO,eAAP,CAArB;;AAEA,gBAAG,CAACgG,YAAJ,EAAkB;AACd,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKrG,YAAL,CAAkB,mBAAmBqG,YAArC,CAAP;AACH;;;sCAEahG,M,EAAQ;AAClB,gBAAMiG,aAAajG,OAAO,aAAP,CAAnB;;AAEA,gBAAG,CAACiG,UAAJ,EAAgB;AACZ,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKtG,YAAL,CAAkB,iBAAiBsG,UAAnC,CAAP;AACH;;;sCAEalF,U,EAAY;AACtB,gBAAG,CAACA,UAAJ,EAAgB;AACZ,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKpB,YAAL,CAAkB,iBAAiBoB,UAAnC,CAAP;AACH;;;4CAEmB0D,gB,EAAkB;AAClC,mBAAO,KAAK9E,YAAL,CAAkB,wBAAwB8E,gBAA1C,CAAP;AACH;;;yCAEgBzE,M,EAAQ;AACrB,gBAAMkG,gBAAgBlG,OAAO,iBAAP,CAAtB;;AAEA,gBAAG,CAACkG,aAAJ,EAAmB;AACf,uBAAO,IAAP;AACH;AACD,mBAAO,KAAKvG,YAAL,CAAkB,qBAAqBuG,aAAvC,CAAP;AACH;;;;;;kBAIUT,a;;;;;;;;AC5Gf;;;;;;;;AAEA;;;;;;;;;;;;IAEMU,c;;;;;;;;;;;oCAEUrB,Q,EAAU;AAClB,mBAAO,KAAKnF,YAAL,CAAkB,eAAemF,QAAjC,CAAP;AACH;;;;;;kBAIUqB,c;;;;;;;;ACZf;;;;;;AAEA;;;;;;;;;;;;IAEMC,W;;;;;;;;;;;;kBAGSA,W;;;;;;;ACPf,gD;;;;;;;ACAA;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEMC,I;AACF;AACA,cAAY3G,MAAZ,EAAyC;AAAA,QAArB6B,UAAqB,uEAAR,MAAQ;;AAAA;;AACrC,SAAK+E,UAAL,GAAkB,yBAAe5G,MAAf,EAAuB6B,UAAvB,CAAlB;AACA,SAAKgF,QAAL,GAAgB,uBAAa7G,MAAb,EAAqB6B,UAArB,CAAhB;AACA,SAAKiF,OAAL,GAAe,sBAAY9G,MAAZ,EAAoB6B,UAApB,CAAf;AACA,SAAKkF,MAAL,GAAc,qBAAW/G,MAAX,EAAmB6B,UAAnB,CAAd;AACA,SAAKmF,IAAL,GAAY,mBAAShH,MAAT,EAAiB6B,UAAjB,CAAZ;AACH,C;;kBAGU8E,I","file":"node-fred.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"node-fred\", [\"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"node-fred\"] = factory(require(\"axios\"));\n\telse\n\t\troot[\"node-fred\"] = factory(root[\"axios\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_12__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6201dae96fedcfded296","'use strict';\n\n// Implement a builder pattern\nclass Builder {\n    constructor() {\n        this.url = '';\n    }\n\n    addAttribute(attribute) {\n        this.url += (this.url === '' ? '' : '&') + attribute;\n        return this;\n    }\n\n    setAPIKey(apiKey) {\n        return this.addAttribute('api_key=' + apiKey);\n    }\n\n    setFileType(fileType) {\n        return this.addAttribute('file_type=' + fileType);\n    }\n\n    isValidDate(dateString) {\n        const regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n\n        return dateString.match(regEx) != null;\n    }\n\n    setRealTimeStart(params) {\n        const realTimeStart = params['realtime_start'];\n\n        if(!realTimeStart) {\n            return this;\n        } else if(!this.isValidDate(realTimeStart)) {\n            throw new Error('The format of this date is not valid. Please format the date like this: YYYY-MM-DD');\n        }\n        return this.addAttribute('realtime_start=' + realTimeStart);\n    }\n\n    setRealTimeEnd(params) {\n        const realTimeEnd = params['realtime_end'];\n\n        if(!realTimeEnd) {\n            return this;\n        } else if(!this.isValidDate(realTimeEnd)) {\n            throw new Error('The format of this date is not valid. Please format the date like this: YYYY-MM-DD');\n        }\n        return this.addAttribute('realtime_end=' + realTimeEnd);\n    }\n\n    setLimit(params) {\n        const limit = parseInt(params['limit'], 10);\n\n        if(!limit) {\n            return this;\n        } else if(limit < 0 || limit > 1000) {\n            throw new Error('Limit must be between 0 and 1000');\n        }\n        return this.addAttribute('limit=' + limit);\n    }\n\n    setOffset(params) {\n        const offset = parseInt(params['offset'], 10);\n\n        if(!offset) {\n            return this;\n        } else if(offset < 0) {\n            throw new Error('Offset must be greater than 0');\n        }\n        return this.addAttribute('offset=' + offset);\n    }\n\n    setOrderBy(params) {\n        const orderBy = params['order_by'];\n\n        if(!orderBy) {\n            return this;\n        }\n        return this.addAttribute('order_by=' + orderBy);\n    }\n\n    setSortOrder(params) {\n        let sortOrder = params['sort_order'];\n\n        if(!sortOrder) {\n            return this;\n        }\n        sortOrder = sortOrder.toLowerCase();\n        if(sortOrder !== 'asc' && sortOrder !== 'desc') {\n            throw new Error('Sort order can only be either asc or desc');\n        }\n        return this.addAttribute('sort_order=' + sortOrder);\n    }\n\n    setFilterVariable(params) {\n        const filterVariable = params['filter_variable'];\n\n        if(!filterVariable) {\n            return this;\n        }\n        return this.addAttribute('filter_variable=' + filterVariable);\n    }\n\n    setFilterValue(params) {\n        const filterValue = params['filter_value'];\n\n        if(!filterValue) {\n            return this;\n        }\n        return this.addAttribute('filter_value=' + filterValue);\n    }\n\n    setTagNames(params) {\n        if (typeof (params) === 'string') {\n            return this.addAttribute('tag_names=' + params);\n        }\n        const tagNames = params['tag_names'];\n\n        if(!tagNames) {\n            return this;\n        }\n        return this.addAttribute('tag_names=' + tagNames);\n    }\n\n    setExcludeTagNames(params) {\n        const excludeTagNames = params['exclude_tag_names'];\n\n        if(!excludeTagNames) {\n            return this;\n        }\n        return this.addAttribute('exclude_tag_names=' + excludeTagNames);\n    }\n\n    setSearchText(params) {\n        const searchText = params['search_text'];\n\n        if(!searchText) {\n            return this;\n        }\n        return this.addAttribute('search_text=' + searchText);\n    }\n\n    setTagGroupId(params) {\n        const tagGroupId = params['tag_group_id'];\n\n        if(!tagGroupId) {\n            return this;\n        }\n        return this.addAttribute('tag_group_id=' + tagGroupId);\n    }\n\n    getUrl() {\n        return this.url;\n    }\n}\n\nexport default Builder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Builders/builder.js","'use strict';\nimport axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.stlouisfed.org/fred/',\n    timeout: 1000,\n    headers: {}\n});\n\nexport default api;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","'use strict';\nimport api from '../api';\nimport CategoryBuilder from './Builders/categoryBuilder';\n\nclass Categories {\n    constructor(apiKey, returnType) {\n        this.apiKey = apiKey;\n        this.returnType = returnType;\n        this.categoryBuilder = new CategoryBuilder();\n    }\n\n    /**\n     * Gets a category\n     * @param {Number} categoryId\n     * @returns {Promise} Resolves with the category or errors out\n     */\n    getCategory(categoryId) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.categoryBuilder\n                    .setAPIKey(this.apiKey)\n                    .setCategoryId(categoryId)\n                    .setFileType(this.returnType)\n                    .getUrl();\n\n                api.get('category?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the child categories for a specified parent category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the child category or errors out\n     */\n    getChildCategories(categoryId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.categoryBuilder\n                    .setAPIKey(this.apiKey)\n                    .setCategoryId(categoryId)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('category/children?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the related categories for a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related categories or errors out\n     */\n    getRelatedCategories(categoryId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.categoryBuilder\n                    .setAPIKey(this.apiKey)\n                    .setCategoryId(categoryId)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('category/related?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the series in a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the series or errors out\n     */\n    getCategorySeries(categoryId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.categoryBuilder\n                    .setAPIKey(this.apiKey)\n                    .setCategoryId(categoryId)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setFilterVariable(params)\n                    .setFilterValue(params)\n                    .setTagNames(params)\n                    .setExcludeTagNames(params)\n                    .getUrl();\n\n                api.get('category/series?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Get the FRED tags for a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the tags for the category or errors out\n     */\n    getCategoryTags(categoryId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.categoryBuilder\n                    .setAPIKey(this.apiKey)\n                    .setCategoryId(categoryId)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames(params)\n                    .setTagGroupId(params)\n                    .setSearchText(params)\n                    .getUrl();\n\n                api.get('category/tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Get the related FRED tags for a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related tags for the category or errors out\n     */\n    getCategoryRelatedTags(categoryId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.categoryBuilder\n                    .setAPIKey(this.apiKey)\n                    .setCategoryId(categoryId)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames(params)\n                    .setTagGroupId(params)\n                    .setSearchText(params)\n                    .getUrl();\n\n                api.get('category/related_tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n}\n\nexport default Categories;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/categories.js","'use strict';\nimport api from '../api';\nimport ReleaseBuilder from './Builders/releaseBuilder';\n\nclass Releases {\n\n    constructor(apiKey, returnType) {\n        this.apiKey = apiKey;\n        this.returnType = returnType;\n        this.releaseBuilder = new ReleaseBuilder();\n    }\n\n    /**\n     * Gets all releases of economic data.\n     * @param {Object} params\n     * @returns {Promise} Resolves with all releases of economic data or errors out\n     */\n    getAllReleases(params) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .getUrl();\n\n                api.get('releases?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets release dates for all releases of economic data.\n     * @param {Object} params\n     * @returns {Promise} Resolves with all releases dates of economic data or errors out\n     */\n    getAllReleasesWithDates(params) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setIncludeRelatedDatesWithNoData(params)\n                    .getUrl();\n\n                api.get('releases/dates?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets a release of economic data.\n     * @param {Number} releaseId\n     * @param {Object} params\n     * @returns {Promise} Resolves with all releases dates of economic data or errors out\n     */\n    getRelease(releaseId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('release?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Get release dates for a release of economic data.\n     * @param {Number} releaseId\n     * @param {Object} params\n     * @returns {Promise} Resolves with all releases dates of economic data or errors out\n     */\n    getReleaseWithDates(releaseId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setSortOrder(params)\n                    .setIncludeRelatedDatesWithNoData(params)\n                    .getUrl();\n\n                api.get('release/dates?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the series on a release of economic data.\n     * @param {Number} releaseId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the series on a release of economic data or errors out\n     */\n    getSeriesForRelease(releaseId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setSortOrder(params)\n                    .setOrderBy(params)\n                    .setFilterVariable(params)\n                    .setFilterValue(params)\n                    .setTagNames(params)\n                    .setExcludeTagNames(params)\n                    .getUrl();\n\n                api.get('release/series?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the sources for a release of economic data.\n     * @param {Number} releaseId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the sources for a release of economic data or errors out\n     */\n    getSourcesForRelease(releaseId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('release/sources?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the FRED tags for a release.\n     * @param {Number} releaseId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the sources for a release of economic data or errors out\n     */\n    getTagsForRelease(releaseId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setSortOrder(params)\n                    .setOrderBy(params)\n                    .setTagNames(params)\n                    .setTagGroupId(params)\n                    .setSearchText(params)\n                    .getUrl();\n\n                api.get('release/tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Get the related FRED tags for one or more FRED tags within a release.\n     * @param {Number} releaseId\n     * @param {String} tagNames\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related FRED tags for one or more FRED tags within a release or errors out\n     */\n    getRelatedTagsForRelease(releaseId, tagNames, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setSortOrder(params)\n                    .setOrderBy(params)\n                    .setTagNames({'tag_names': tagNames})\n                    .setExcludeTagNames(params)\n                    .setTagGroupId(params)\n                    .setSearchText(params)\n                    .getUrl();\n\n                api.get('release/related_tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets release table trees for a given release.\n     * @param {Number} releaseId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the release table trees for a given release or errors out\n     */\n    getTableTreesForRelease(releaseId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.releaseBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setReleaseId(releaseId)\n                    .setElementId(params)\n                    .setIncludeObservationValues(params)\n                    .setObservationDate(params)\n                    .getUrl();\n\n                api.get('release/tables?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n}\n\nexport default Releases;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/releases.js","'use strict';\nimport api from '../api';\nimport SeriesBuilder from './Builders/seriesBuilder';\n\nclass Series {\n    constructor(apiKey, returnType) {\n        this.apiKey = apiKey;\n        this.returnType = returnType;\n        this.seriesBuilder = new SeriesBuilder();\n    }\n\n    /**\n     * Gets an economic data series.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with an economic data series or errors out\n     */\n    getSeries(seriesId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSeriesId(seriesId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('series?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the categories for an economic data series.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the categories for an economic data series or errors out\n     */\n    getCategoriesForSeries(seriesId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSeriesId(seriesId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('series/categories?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the observations or data values for an economic data series.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the observations or data values for an economic data series or errors out\n     */\n    getObservationsForSeries(seriesId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSeriesId(seriesId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setSortOrder(params)\n                    .setObservationStart(params)\n                    .setObservationEnd(params)\n                    .setUnits(params)\n                    .setFrequency(params)\n                    .setAggregationMethod(params)\n                    .setOutputType(params)\n                    .setVintageDate(params)\n                    .getUrl();\n\n                api.get('series/observations?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the release for an economic data series.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the release for an economic data series or errors out\n     */\n    getReleaseForSeries(seriesId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSeriesId(seriesId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('series/release?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets economic data series that match keywords.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with economic data series that match keywords or errors out\n     */\n    getSeriesThatMatchesSearch(searchText, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSearchText(searchText)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setFilterVariable(params)\n                    .setFilterValue(params)\n                    .setTagNames(params)\n                    .setExcludeTagNames(params)\n                    .setSearchType(params)\n                    .getUrl();\n\n                api.get('series/search?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the tags for a series search.\n     * @param {Number} seriesId\n     * @param {String} seriesSearchText\n     * @param {Object} params\n     * @returns {Promise} Resolves with the tags for a series search or errors out\n     */\n    getTagsForSeriesSearch(seriesSearchText, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames(params)\n                    .setTagGroupId(params)\n                    .setTagSearchText(params)\n                    .setSeriesSearchText(seriesSearchText)\n                    .getUrl();\n\n                api.get('series/search/tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the related tags for a series search.\n     * @param {Number} seriesId\n     * @param {String} seriesSearchText\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related tags for a series search or errors out\n     */\n    getRelatedTagsForSeriesSearch(seriesSearchText, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames(params)\n                    .setExcludeTagNames(params)\n                    .setTagGroupId(params)\n                    .setTagSearchText(params)\n                    .setSeriesSearchText(seriesSearchText)\n                    .getUrl();\n\n                api.get('series/search/related_tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the tags for an economic data series.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the tags for an economic data series or errors out\n     */\n    getTagsForSeries(seriesId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSeriesId(seriesId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .getUrl();\n\n                api.get('series/tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets economic data series sorted by when observations were updated on the FRED® server.\n     * @param {Object} params\n     * @returns {Promise} Resolves with economic data series sorted by\n     * when observations were updated on the FRED® server or errors out\n     */\n    getUpdatedSeries(params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setFilterValue(params)\n                    .getUrl();\n\n                api.get('series/updates?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the dates in history when a series' data values were revised or new data values were released.\n     * @param {Number} seriesId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the dates in history when a\n     * series' data values were revised or new data values were released or errors out\n     */\n    getVintageDatesSeries(seriesId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.seriesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSeriesId(seriesId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setSortOrder(params)\n                    .getUrl();\n\n                api.get('series/vintagedates?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n}\n\nexport default Series;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/series.js","'use strict';\nimport api from '../api';\nimport SourcesBuilder from './Builders/sourcesBuilder';\n\nclass Sources {\n    constructor(apiKey, returnType) {\n        this.apiKey = apiKey;\n        this.returnType = returnType;\n        this.sourcesBuilder = new SourcesBuilder();\n    }\n\n    /**\n     * Gets all sources of economic data.\n     * @param {Object} params\n     * @returns {Promise} Resolves with all sources of economic data or errors out\n     */\n    getAllSources(params) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.sourcesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .getUrl();\n\n                api.get('sources?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets a source of economic data.\n     * @param {Number} sourceId\n     * @param {Object} params\n     * @returns {Promise} Resolves with a source of economic data or errors out\n     */\n    getSource(sourceId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.sourcesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSourceId(sourceId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .getUrl();\n\n                api.get('source?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the releases for a source.\n     * @param {Number} sourceId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the releases for a source or errors out\n     */\n    getReleasesForSource(sourceId, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.sourcesBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setSourceId(sourceId)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .getUrl();\n\n                api.get('source/releases?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n}\n\nexport default Sources;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/sources.js","'use strict';\nimport api from '../api';\nimport TagsBuilder from './Builders/tagsBuilder';\n\nclass Tags {\n    constructor(apiKey, returnType) {\n        this.apiKey = apiKey;\n        this.returnType = returnType;\n        this.tagsBuilder = new TagsBuilder();\n    }\n\n    /**\n     * Gets all tags, search for tags, or get tags by name.\n     * @param {Object} params\n     * @returns {Promise} Resolves with a set of tags or errors out\n     */\n    getAllTags(params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.tagsBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames(params)\n                    .setTagGroupId(params)\n                    .setSearchText(params)\n                    .getUrl();\n\n                api.get('tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Get the related tags for one or more tags.\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related tags for one or more tags or errors out\n     */\n    getAllRelatedTags(tagNames, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.tagsBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames(tagNames)\n                    .setExcludeTagNames(params)\n                    .setTagGroupId(params)\n                    .setSearchText(params)\n                    .getUrl();\n\n                api.get('related_tags?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Gets the series matching tags.\n     * @param {string} tagNames\n     * @param {Object} params\n     * @returns {Promise} Resolves with the series matching tags or errors out\n     */\n    getAllSeriesMatchingTags(tagNames, params = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const url = this.tagsBuilder\n                    .setAPIKey(this.apiKey)\n                    .setFileType(this.returnType)\n                    .setRealTimeStart(params)\n                    .setRealTimeEnd(params)\n                    .setLimit(params)\n                    .setOffset(params)\n                    .setOrderBy(params)\n                    .setSortOrder(params)\n                    .setTagNames({'tag_names': tagNames})\n                    .setExcludeTagNames(params)\n                    .getUrl();\n\n                api.get('tags/series?' + url)\n                    .then((res) => {\n                        resolve(res.data);\n                    })\n                    .catch((err) => {\n                        reject(err.response.data);\n                    });\n            } catch(e) {\n                reject(e);\n            }\n        });\n    }\n}\n\nexport default Tags;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/tags.js","'use strict';\n\nimport Builder from './builder.js';\n\nclass CategoryBuilder extends Builder {\n\n    setCategoryId(categoryId) {\n        return this.addAttribute('category_id=' + categoryId);\n    }\n\n}\n\nexport default CategoryBuilder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Builders/categoryBuilder.js","'use strict';\n\nimport Builder from './builder.js';\n\nclass ReleaseBuilder extends Builder {\n\n    setReleaseId(releaseId) {\n        // Must be a positive integer\n        const id = parseInt(releaseId, 10);\n\n        if(id <= 0) {\n            throw new Error('The release id must be a positive integer');\n        }\n\n        return this.addAttribute('release_id=' + releaseId);\n    }\n\n    setIncludeRelatedDatesWithNoData(params) {\n        const includeRelatedDatesWithNoData = params['include_release_dates_with_no_data'];\n\n        if(!includeRelatedDatesWithNoData) {\n            return this;\n        }\n        return this.addAttribute('include_release_dates_with_no_data=' + includeRelatedDatesWithNoData);\n    }\n\n    setElementId(params) {\n        const elementId = params['element_id'];\n\n        if(!elementId) {\n            return this;\n        }\n        return this.addAttribute('element_id=' + elementId);\n    }\n\n    setIncludeObservationValues(params) {\n        const includeObservationValues = params['include_observation_values'];\n\n        if(!includeObservationValues) {\n            return this;\n        } else if(includeObservationValues !== 'true' && includeObservationValues !== 'false') {\n            throw new Error('The include_observation_values field must either be true or false');\n        }\n        return this.addAttribute('include_observation_values=' + includeObservationValues);\n    }\n\n    setObservationDate(params) {\n        const observationDate = params['observation_date'];\n\n        if(!observationDate) {\n            return this;\n        } else if(!this.isValidDate(observationDate)) {\n            throw new Error('The format of this date is not valid. Please format the date like this: YYYY-MM-DD');\n        }\n        return this.addAttribute('observation_date=' + observationDate);\n    }\n}\n\nexport default ReleaseBuilder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Builders/releaseBuilder.js","'use strict';\n\nimport Builder from './builder.js';\n\nclass SeriesBuilder extends Builder {\n\n    setSeriesId(seriesId) {\n        return this.addAttribute('series_id=' + seriesId);\n    }\n\n    setObservationStart(params) {\n        const observationStart = params['observation_start'];\n\n        if(!observationStart) {\n            return this;\n        } else if(!this.isValidDate(observationStart)) {\n            throw new Error('The format of this date is not valid. Please format the date like this: YYYY-MM-DD');\n        }\n        return this.addAttribute('observation_start=' + observationStart);\n    }\n\n    setObservationEnd(params) {\n        const observationEnd = params['observation_end'];\n\n        if(!observationEnd) {\n            return this;\n        } else if(!this.isValidDate(observationEnd)) {\n            throw new Error('The format of this date is not valid. Please format the date like this: YYYY-MM-DD');\n        }\n        return this.addAttribute('observation_end=' + observationEnd);\n    }\n\n    setUnits(params) {\n        const units = params['units'];\n\n        if(units === '') {\n            return this;\n        }\n        return this.addAttribute('units=' + units);\n    }\n\n    setFrequency(params) {\n        const frequency = params['frequency'];\n\n        if(!frequency) {\n            return this;\n        }\n        return this.addAttribute('frequency=' + frequency);\n    }\n\n    setAggregationMethod(params) {\n        const aggregationMethod = params['aggregation_method'];\n\n        if(!aggregationMethod) {\n            return this;\n        }\n        return this.addAttribute('aggregation_method=' + aggregationMethod);\n    }\n\n    setOutputType(params) {\n        const outputType = params['output_type'];\n\n        if(!outputType) {\n            return this;\n        }\n        return this.addAttribute('output_type=' + outputType);\n    }\n\n    setVintageDate(params) {\n        const vintageDates = params['vintage_dates'];\n\n        if(!vintageDates) {\n            return this;\n        }\n        return this.addAttribute('vintage_dates=' + vintageDates);\n    }\n\n    setSearchType(params) {\n        const searchType = params['search_type'];\n\n        if(!searchType) {\n            return this;\n        }\n        return this.addAttribute('search_type=' + searchType);\n    }\n\n    setSearchText(searchText) {\n        if(!searchText) {\n            return this;\n        }\n        return this.addAttribute('search_text=' + searchText);\n    }\n\n    setSeriesSearchText(seriesSearchText) {\n        return this.addAttribute('series_search_text=' + seriesSearchText);\n    }\n\n    setTagSearchText(params) {\n        const tagSearchText = params['tag_search_text'];\n\n        if(!tagSearchText) {\n            return this;\n        }\n        return this.addAttribute('tag_search_text=' + tagSearchText);\n    }\n\n}\n\nexport default SeriesBuilder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Builders/seriesBuilder.js","'use strict';\n\nimport Builder from './builder.js';\n\nclass SourcesBuilder extends Builder {\n\n    setSourceId(sourceId) {\n        return this.addAttribute('source_id=' + sourceId);\n    }\n\n}\n\nexport default SourcesBuilder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Builders/sourcesBuilder.js","'use strict';\n\nimport Builder from './builder.js';\n\nclass TagsBuilder extends Builder {\n}\n\nexport default TagsBuilder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Builders/tagsBuilder.js","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 12\n// module chunks = 0","'use strict';\nimport Series from './Api/series';\nimport Categories from './Api/categories';\nimport Releases from './Api/releases';\nimport Sources from './Api/sources';\nimport Tags from './Api/tags';\n\nclass Fred {\n    // Return type is either xml or json, defaults to json\n    constructor(apiKey, returnType = 'json') {\n        this.categories = new Categories(apiKey, returnType);\n        this.releases = new Releases(apiKey, returnType);\n        this.sources = new Sources(apiKey, returnType);\n        this.series = new Series(apiKey, returnType);\n        this.tags = new Tags(apiKey, returnType);\n    }\n}\n\nexport default Fred;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}